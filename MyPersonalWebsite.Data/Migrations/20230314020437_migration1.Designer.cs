// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPersonalWebsite.Data;

#nullable disable

namespace MyPersonalWebsite.Data.Migrations
{
    [DbContext(typeof(PersonalWebDbContext))]
    [Migration("20230314020437_migration1")]
    partial class migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyPersonalWebsite.Data.Entities.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("MyPersonalWebsite.Data.Entities.GenericList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GenericLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "100",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6882),
                            IsActive = true,
                            Name = "Adet",
                            TypeName = "Miktar",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6880)
                        },
                        new
                        {
                            Id = 2,
                            Code = "101",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6884),
                            IsActive = true,
                            Name = "Koli",
                            TypeName = "Miktar",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6883)
                        },
                        new
                        {
                            Id = 3,
                            Code = "103",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6887),
                            IsActive = true,
                            Name = "Paket",
                            TypeName = "Miktar",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6886)
                        },
                        new
                        {
                            Id = 4,
                            Code = "104",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6890),
                            IsActive = true,
                            Name = "Palet",
                            TypeName = "Miktar",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6889)
                        },
                        new
                        {
                            Id = 5,
                            Code = "200",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6892),
                            IsActive = true,
                            Name = "Kg",
                            TypeName = "Ağırlık",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6891)
                        },
                        new
                        {
                            Id = 6,
                            Code = "201",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6895),
                            IsActive = true,
                            Name = "Ton",
                            TypeName = "Ağırlık",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6894)
                        });
                });

            modelBuilder.Entity("MyPersonalWebsite.Data.Entities.MaterialInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MaterialInformations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1000000",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6792),
                            Description = "",
                            IsActive = true,
                            Name = "Dell Insprion 5515 Laptop",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6790)
                        },
                        new
                        {
                            Id = 2,
                            Code = "1000002",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6795),
                            Description = "",
                            IsActive = true,
                            Name = "Apple Macbook Pro 13",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6794)
                        },
                        new
                        {
                            Id = 3,
                            Code = "1000003",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6798),
                            Description = "",
                            IsActive = true,
                            Name = "MSI 32 Curve Monitor",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6796)
                        },
                        new
                        {
                            Id = 4,
                            Code = "1000004",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6800),
                            Description = "",
                            IsActive = true,
                            Name = "Microsoft Mouse",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6799)
                        },
                        new
                        {
                            Id = 5,
                            Code = "1000005",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6803),
                            Description = "",
                            IsActive = true,
                            Name = "Windows 11 Kutulu Lisans",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6802)
                        },
                        new
                        {
                            Id = 6,
                            Code = "1000006",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6806),
                            Description = "",
                            IsActive = true,
                            Name = "100 Watt Type C Adaptör",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6804)
                        });
                });

            modelBuilder.Entity("MyPersonalWebsite.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerOrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FromAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QuantityUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("ToAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WeightUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerOrderNo")
                        .IsUnique();

                    b.HasIndex("MaterialId");

                    b.HasIndex("StatusId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MyPersonalWebsite.Data.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "100",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6706),
                            Description = "Sipariş Alındı",
                            IsActive = true,
                            Name = "Sipariş Alındı",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6703)
                        },
                        new
                        {
                            Id = 2,
                            Code = "101",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6709),
                            Description = "Yola Çıktı",
                            IsActive = true,
                            Name = "Yola Çıktı",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6707)
                        },
                        new
                        {
                            Id = 3,
                            Code = "102",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6711),
                            Description = "Dağıtım Merkezinde",
                            IsActive = true,
                            Name = "Dağıtım Merkezinde",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6710)
                        },
                        new
                        {
                            Id = 4,
                            Code = "103",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6714),
                            Description = "Dağıtıma Çıktı",
                            IsActive = true,
                            Name = "Dağıtıma Çıktı",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6713)
                        },
                        new
                        {
                            Id = 5,
                            Code = "104",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6716),
                            Description = "Teslim Edildi",
                            IsActive = true,
                            Name = "Teslim Edildi",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6715)
                        },
                        new
                        {
                            Id = 6,
                            Code = "105",
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6719),
                            Description = "Teslim Edilemedi",
                            IsActive = true,
                            Name = "Teslim Edilemedi",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6718)
                        });
                });

            modelBuilder.Entity("MyPersonalWebsite.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivationHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BadLoginAttempts")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivationHash = "",
                            BadLoginAttempts = 0,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6538),
                            Email = "eyyub.tezcan@gmail.com",
                            EncryptedPassword = "",
                            ExpireDate = new DateTime(2023, 4, 13, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6532),
                            IsActive = false,
                            LastName = "",
                            Name = "System",
                            PhoneNumber = "",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6528),
                            UserName = "System"
                        },
                        new
                        {
                            Id = 2,
                            ActivationHash = "",
                            BadLoginAttempts = 0,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6542),
                            Email = "eyyub.tezcan@gmail.com",
                            EncryptedPassword = "",
                            ExpireDate = new DateTime(2023, 4, 13, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6541),
                            IsActive = true,
                            LastName = "Tezcan",
                            Name = "Eyyüb",
                            PhoneNumber = "05375140784",
                            UpdatedDate = new DateTime(2023, 3, 14, 5, 4, 37, 59, DateTimeKind.Local).AddTicks(6540),
                            UserName = "eyyub.tezcan@gmail.com"
                        });
                });

            modelBuilder.Entity("MyPersonalWebsite.Data.Entities.Order", b =>
                {
                    b.HasOne("MyPersonalWebsite.Data.Entities.MaterialInformation", "Material")
                        .WithMany("Orders")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyPersonalWebsite.Data.Entities.OrderStatus", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MyPersonalWebsite.Data.Entities.MaterialInformation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MyPersonalWebsite.Data.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
